//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Viewer.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Viewer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///  html2canvas 0.4.1 &lt;http://html2canvas.hertzen.com&gt;
        ///  Copyright (c) 2013 Niklas von Hertzen
        ///
        ///  Released under MIT License
        ///*/
        ///
        ///(function(window, document, undefined){
        ///
        ///&quot;use strict&quot;;
        ///
        ///var _html2canvas = {},
        ///previousElement,
        ///computedCSS,
        ///html2canvas;
        ///
        ///_html2canvas.Util = {};
        ///
        ///_html2canvas.Util.log = function(a) {
        ///  if (_html2canvas.logging &amp;&amp; window.console &amp;&amp; window.console.log) {
        ///    window.console.log(a);
        ///  }
        ///};
        ///
        ///_html2canvas.Util.trimText = (function(isNative){
        ///  return functio [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string html2canvas {
            get {
                return ResourceManager.GetString("html2canvas", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to              var imagePath = jelement.find(&apos;img:first-of-type&apos;).attr(&apos;src&apos;);
        ///             var scrollPos = document.body.scrollTop;
        ///             html2canvas(jelement, {
        ///                 onrendered: function(canvas) {
        ///                     window.scrollTo(0, scrollPos);
        ///                     var base64 = canvas.toDataURL(&apos;image/png&apos;);
        ///                     ai_investing_com_viewer.onNewComment(id, base64, imagePath);
        ///                 }
        ///             });.
        /// </summary>
        internal static string ShowNotification {
            get {
                return ResourceManager.GetString("ShowNotification", resourceCulture);
            }
        }
    }
}
